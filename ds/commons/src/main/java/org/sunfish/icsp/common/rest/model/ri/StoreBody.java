/*
 * SUNFISH Blockchain API - Storage of access control policies
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: S.Ferdous@soton.ac.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.sunfish.icsp.common.rest.model.ri;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * HTTP body defining the store operation for the /store endpoint.
 */
@ApiModel(description = "HTTP body defining the store operation for the /store endpoint.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-23T08:20:44.040Z")
public class StoreBody {
  private String requestorID    = null;

  private String token          = null;

  private String policy         = null;

  private String expirationTime = null;

  private String id             = null;

  private String serviceID      = null;

  private String policyType     = null;

  public StoreBody() {

  }

  public StoreBody(final String requestorID, final String token, final String policy, final String expirationTime, final String id,
      final String serviceID, final String policyType) {
    this.requestorID = requestorID;
    this.token = token;
    this.policy = policy;
    this.expirationTime = expirationTime;
    this.id = id;
    this.serviceID = serviceID;
    this.policyType = policyType;
  }

  public StoreBody requestorID(final String requestorID) {
    this.requestorID = requestorID;
    return this;
  }

  /**
   * Identifier of the requesting entity.
   *
   * @return requestorID
   **/
  @ApiModelProperty(example = "null", required = true, value = "Identifier of the requesting entity.")
  public String getRequestorID() {
    return requestorID;
  }

  public void setRequestorID(final String requestorID) {
    this.requestorID = requestorID;
  }

  public StoreBody token(final String token) {
    this.token = token;
    return this;
  }

  /**
   * A crypto token to validate if the entity is allowed to perform the
   * requested operation.
   *
   * @return token
   **/
  @ApiModelProperty(example = "null", required = true, value = "A crypto token to validate if the entity is allowed to perform the requested operation.")
  public String getToken() {
    return token;
  }

  public void setToken(final String token) {
    this.token = token;
  }

  public StoreBody policy(final String policy) {
    this.policy = policy;
    return this;
  }

  /**
   * Base64-encoded policy data.
   *
   * @return policy
   **/
  @ApiModelProperty(example = "null", required = true, value = "Base64-encoded policy data.")
  public String getPolicy() {
    return policy;
  }

  public void setPolicy(final String policy) {
    this.policy = policy;
  }

  public StoreBody expirationTime(final String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Specifies the expiration time of the policy in milli-seconds starting from
   * midnight, January 1, 1970 UTC. After this time the policy set must not be
   * used.
   *
   * @return expirationTime
   **/
  @ApiModelProperty(example = "null", required = true, value = "Specifies the expiration time of the policy in milli-seconds starting from midnight, January 1, 1970 UTC. After this time the policy set must not be used.")
  public String getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(final String expirationTime) {
    this.expirationTime = expirationTime;
  }

  public StoreBody id(final String id) {
    this.id = id;
    return this;
  }

  /**
   * The identifer for the policy.
   *
   * @return id
   **/
  @ApiModelProperty(example = "null", required = true, value = "The identifer for the policy.")
  public String getId() {
    return id;
  }

  public void setId(final String id) {
    this.id = id;
  }

  public StoreBody serviceID(final String serviceID) {
    this.serviceID = serviceID;
    return this;
  }

  /**
   * The identifier of the service this policy applies to.
   *
   * @return serviceID
   **/
  @ApiModelProperty(example = "null", value = "The identifier of the service this policy applies to.")
  public String getServiceID() {
    return serviceID;
  }

  public void setServiceID(final String serviceID) {
    this.serviceID = serviceID;
  }

  public StoreBody policyType(final String policyType) {
    this.policyType = policyType;
    return this;
  }

  /**
   * The type of the policy.
   *
   * @return policyType
   **/
  @ApiModelProperty(example = "null", value = "The type of the policy.")
  public String getPolicyType() {
    return policyType;
  }

  public void setPolicyType(final String policyType) {
    this.policyType = policyType;
  }

  @Override
  public boolean equals(final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final StoreBody storeBody = (StoreBody) o;
    return Objects.equals(this.requestorID, storeBody.requestorID)
        && Objects.equals(this.token, storeBody.token) && Objects.equals(this.policy, storeBody.policy)
        && Objects.equals(this.expirationTime, storeBody.expirationTime)
        && Objects.equals(this.id, storeBody.id) && Objects.equals(this.serviceID, storeBody.serviceID)
        && Objects.equals(this.policyType, storeBody.policyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestorID, token, policy, expirationTime, id, serviceID, policyType);
  }

  @Override
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class StoreBody {\n");

    sb.append("    requestorID: ").append(toIndentedString(requestorID)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    serviceID: ").append(toIndentedString(serviceID)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
